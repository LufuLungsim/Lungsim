%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% Function to write ASCII data files analogous to wBreath
%
% Copy right: NM Numerical Modelling GmbH
% This model must not be distributed without explicit consent by NM GmbH
%
% Version 2.4, 20. Oktober 2011
% Markus Roos, NM GmbH
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function [ok] = writeSignalSpirowareMassSpec(signal,file,type,verb)

    fid = fopen(file, 'w');
    if fid<1
        error('cannot open file %s',file);
    end
    
    switch type
        case 1  % C file
            header='Time\tFlow\tO2\tCO2\tMMss\tSampleFlow\tMMms\tN2\tMMssCalc\tDiffMMss\t\r\n';
            format='%g\t%g\t%g\t%g\t%g\t%g\t%g\t%g\t%g\t%g\t\r\n';
            data=[signal.ts*1e3,...
                signal.IvEffBTPS*1e3,...
                signal.O2Poi1*100,...
                signal.CO2Poi1*100,...
                signal.MMssFilter*1e3,...
                signal.Ivss*1e6,...
                signal.MMFilter*1e3,...
                signal.N2Poi1*100,...
                signal.MMssCalc*1e3,...
                signal.DiffMMss*1e3];
            fprintf(fid,header);
            fprintf(fid,format,data');
        case 2  % I file
            header='Time\tFlow\tO2\tCO2\tMMss\tSampleFlow\tMMms\tN2\tMMssCalc\tVol\t\r\n';
            format='%g\t%g\t%g\t%g\t%g\t%g\t%g\t%g\t%g\t%g\t\r\n';
            data=[signal.ts*1e3,...
                signal.IvEffBTPS*1e3,...
                signal.O2Poi1*100,...
                signal.CO2Poi1*100,...
                signal.MMssDelay*1e3,...
                signal.Ivss*1e6,...
                signal.MMFilter*1e3,...
                signal.N2Poi1*100,...
                signal.MMssCalc*1e3,...
                signal.VolBTEffBTPS*1e3];
            fprintf(fid,header);
            fprintf(fid,format,data');
        case 4  % B file
            header='Time\tFlow\tO2\tCO2\tMMss\tSampleFlow\t\r\n';
            format='%g\t%g\t%g\t%g\t%g\t%g\t\r\n';
            data=[signal.ts*1e3,...
                signal.IvEffBTPS*1e3,...
                signal.O2Poi1*100,...
                signal.CO2Poi1*100,...
                signal.MMssDelay*1e3,...
                signal.Ivss*1e3];
            fprintf(fid,header);
            fprintf(fid,format,data');
        case 8  % L file
            header='WFATester Text File Ver 1.01-0,4,60.000,120.000,0,0,-5.000,100.000,0,0,0.000,100.000,3,0,2,0,7,0,0,0\r\n\r\n     Time,    Flow L/S,    Volume L,        N2 %%,\r\n';
            format='%02d:%02d.%03d,    % 7.5f,    % 7.5f,    %8.5f\r\n';
            signalLeicester=outputLeicester(signal,verb);
            data=[signalLeicester.min,...
                signalLeicester.sec,...
                signalLeicester.milli,...
                signalLeicester.flow,...
                signalLeicester.volume,...
                signalLeicester.N2];
            fprintf(fid,header);
            fprintf(fid,format,data');
        case 16  % T file (Toronto)
            header='Tid\tFlow\tHe\tSF6\tCO2\t\r\n';
            format='%g\t%g\t%g\t%g\t%g\t\r\n';
            data=[signal.ts*1e3,...
                signal.IvEffBTPS*1e3,...
                signal.He*100,...
                signal.SF6*100,...
                signal.CO2*100];
            fprintf(fid,header);
            fprintf(fid,format,data');
        otherwise
            disp('no file written, unknown data format')
    end
    
    fclose(fid);

    ok=1;
end
    
